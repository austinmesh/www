---
import { getCollection } from 'astro:content';

// Get events to display in banner
const events = await getCollection('events', (event) => {
  const now = new Date();
  const eventStart = new Date(event.data.startDate);
  const eventEnd = event.data.endDate ? new Date(event.data.endDate) : eventStart;

  // Show events that:
  // 1. Have banner enabled
  // 2. Are happening now OR are upcoming (within 30 days)
  const thirtyDaysFromNow = new Date(now.getTime() + (30 * 24 * 60 * 60 * 1000));

  return event.data.showBanner && (
    (eventStart <= now && eventEnd >= now) || // Currently happening
    (eventStart > now && eventStart <= thirtyDaysFromNow) // Upcoming within 30 days
  );
});

// Sort by start date (closest first)
const activeEvent = events
  .sort((a, b) => {
    return new Date(a.data.startDate).getTime() - new Date(b.data.startDate).getTime();
  })[0];

// Format date for display
function formatEventDate(date: Date): string {
  return date.toLocaleDateString('en-US', {
    weekday: 'long',
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: 'numeric',
    minute: '2-digit',
    timeZoneName: 'short'
  });
}

// Check if event is currently happening
function isEventHappening(event: any): boolean {
  const now = new Date();
  const eventStart = new Date(event.data.startDate);
  const eventEnd = event.data.endDate ? new Date(event.data.endDate) : eventStart;
  return eventStart <= now && eventEnd >= now;
}
---

{activeEvent && (
  <div class="event-banner">
    <div class="event-content">
      <a href="/events" class="event-info">
        <span class="event-status">
          {isEventHappening(activeEvent) ? 'üî¥' : 'üìÖ'}
        </span>
        <span class="event-title">
          {activeEvent.data.bannerText || activeEvent.data.title}
        </span>
        <span class="event-date">
          {formatEventDate(new Date(activeEvent.data.startDate))}
        </span>
        {activeEvent.data.location && (
          <span class="event-location">
            {activeEvent.data.locationUrl ? (
              <a href={activeEvent.data.locationUrl} target="_blank" rel="noopener" class="location-link">
                üìç {activeEvent.data.location}
              </a>
            ) : (
              <>üìç {activeEvent.data.location}</>
            )}
          </span>
        )}
      </a>

      {activeEvent.data.registrationUrl && (
        <a href={activeEvent.data.registrationUrl} class="event-button" target="_blank">
          {isEventHappening(activeEvent) ? 'Join Now' : 'Register'}
        </a>
      )}
    </div>
  </div>
)}

<style>
  .event-banner {
    background: linear-gradient(135deg, var(--ly-brand) 0%, var(--accent) 100%);
    color: #333;
    padding: 0.75rem 2rem;
    text-align: center;
    position: relative;
    z-index: 50;
    border-bottom: 3px solid var(--accent);
  }

  .event-content {
    max-width: 900px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
  }

  .event-info {
    display: flex;
    flex-wrap: nowrap;
    align-items: center;
    gap: 0.75rem;
    text-decoration: none;
    color: inherit;
    transition: opacity 0.2s ease;
  }

  .event-info:hover {
    opacity: 0.8;
  }

  .event-status {
    font-size: 1rem;
    flex-shrink: 0;
  }

  .event-title {
    font-size: 1rem;
    font-weight: bold;
    white-space: nowrap;
    flex-shrink: 0;
  }

  .event-date {
    font-size: 0.875rem;
    opacity: 0.8;
    white-space: nowrap;
    flex-shrink: 1;
    min-width: 0;
  }

  .event-location {
    font-size: 0.875rem;
    opacity: 0.8;
    white-space: nowrap;
    flex-shrink: 0;
  }

  .location-link {
    color: inherit;
    text-decoration: none;
  }

  .location-link:hover {
    color: #333;
  }

  .event-button {
    background: #333;
    color: white;
    padding: 0.4rem 1rem;
    border-radius: 4px;
    text-decoration: none;
    font-weight: bold;
    transition: background 0.2s ease;
    text-transform: uppercase;
    font-size: 0.75rem;
    letter-spacing: 0.5px;
    white-space: nowrap;
    flex-shrink: 0;
  }

  .event-button:hover {
    background: #222;
  }

  @media (min-width: 768px) {
    .event-content {
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
    }

    .event-banner {
      text-align: left;
    }

    .event-date {
      min-width: auto;
    }
  }

  @media (max-width: 767px) {
    .event-date {
      font-size: 0.75rem;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .event-info {
      gap: 0.5rem;
    }

    .event-title {
      font-size: 0.875rem;
    }
  }
</style>
